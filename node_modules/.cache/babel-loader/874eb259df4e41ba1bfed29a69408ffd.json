{"ast":null,"code":"import _slicedToArray from\"/home/khageswar/Documents/project/newPortfolio-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";var ThemeContext=/*#__PURE__*/React.createContext();var ThemeProvider=function ThemeProvider(_ref){var children=_ref.children;var _React$useState=React.useState(\"dark\"),_React$useState2=_slicedToArray(_React$useState,2),themename=_React$useState2[0],setthemename=_React$useState2[1];var toggeltheme=function toggeltheme(){themename===\"light\"?setthemename(\"dark\"):setthemename(\"light\");};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:[{themename:themename,toggeltheme:toggeltheme}],children:children});};export{ThemeProvider,ThemeContext};","map":{"version":3,"sources":["/home/khageswar/Documents/project/newPortfolio-master/src/Context/theme.jsx"],"names":["React","ThemeContext","createContext","ThemeProvider","children","useState","themename","setthemename","toggeltheme"],"mappings":"+KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,2CAGA,GAAMC,CAAAA,YAAY,cAAGD,KAAK,CAACE,aAAN,EAArB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CACtC,oBAAkCJ,KAAK,CAACK,QAAN,CAAe,MAAf,CAAlC,oDAAOC,SAAP,qBAAkBC,YAAlB,qBACA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBF,SAAS,GAAK,OAAd,CAAwBC,YAAY,CAAC,MAAD,CAApC,CAA+CA,YAAY,CAAC,OAAD,CAA3D,CACD,CAFD,CAIA,mBACE,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAE,CAAC,CAAED,SAAS,CAATA,SAAF,CAAaE,WAAW,CAAXA,WAAb,CAAD,CAA9B,UACGJ,QADH,EADF,CAKD,CAXD,CAiBA,OAASD,aAAT,CAAwBF,YAAxB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ThemeContext = React.createContext();\n\nconst ThemeProvider = ({ children }) => {\n  const [themename, setthemename] = React.useState(\"dark\");\n  const toggeltheme = () => {\n    themename === \"light\" ? setthemename(\"dark\") : setthemename(\"light\");\n  };\n\n  return (\n    <ThemeContext.Provider value={[{ themename, toggeltheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport { ThemeProvider, ThemeContext };\n"]},"metadata":{},"sourceType":"module"}