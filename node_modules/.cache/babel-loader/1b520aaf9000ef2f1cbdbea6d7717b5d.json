{"ast":null,"code":"import _slicedToArray from \"/home/khageswar/Documents/project/newPortfolio-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/khageswar/Documents/project/newPortfolio-master/src/Context/theme.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ThemeContext = /*#__PURE__*/React.createContext();\n\nvar ThemeProvider = function ThemeProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _React$useState = React.useState(\"dark\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      themename = _React$useState2[0],\n      setthemename = _React$useState2[1];\n\n  var toggeltheme = function toggeltheme() {\n    themename === \"light\" ? setthemename(\"dark\") : setthemename(\"light\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: [{\n      themename: themename,\n      toggeltheme: toggeltheme\n    }],\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ThemeProvider, \"qRFa7IVJmQQAm/715Nr7kU7RgzI=\");\n\n_c = ThemeProvider;\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport { ThemeProvider, ThemeContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/home/khageswar/Documents/project/newPortfolio-master/src/Context/theme.jsx"],"names":["React","PropTypes","ThemeContext","createContext","ThemeProvider","children","useState","themename","setthemename","toggeltheme","propTypes","node","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,YAAY,gBAAGF,KAAK,CAACG,aAAN,EAArB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AACtC,wBAAkCL,KAAK,CAACM,QAAN,CAAe,MAAf,CAAlC;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBF,IAAAA,SAAS,KAAK,OAAd,GAAwBC,YAAY,CAAC,MAAD,CAApC,GAA+CA,YAAY,CAAC,OAAD,CAA3D;AACD,GAFD;;AAIA,sBACE,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE,CAAC;AAAED,MAAAA,SAAS,EAATA,SAAF;AAAaE,MAAAA,WAAW,EAAXA;AAAb,KAAD,CAA9B;AAAA,cACGJ;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAXD;;GAAMD,a;;KAAAA,a;AAaNA,aAAa,CAACM,SAAd,GAA0B;AACxBL,EAAAA,QAAQ,EAAEJ,SAAS,CAACU,IAAV,CAAeC;AADD,CAA1B;AAIA,SAASR,aAAT,EAAwBF,YAAxB","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ThemeContext = React.createContext();\n\nconst ThemeProvider = ({ children }) => {\n  const [themename, setthemename] = React.useState(\"dark\");\n  const toggeltheme = () => {\n    themename === \"light\" ? setthemename(\"dark\") : setthemename(\"light\");\n  };\n\n  return (\n    <ThemeContext.Provider value={[{ themename, toggeltheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nexport { ThemeProvider, ThemeContext };\n"]},"metadata":{},"sourceType":"module"}